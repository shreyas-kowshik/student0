
map:     file format elf64-x86-64
map
architecture: i386:x86-64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000000000400470

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000400040 paddr 0x0000000000400040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r-x
  INTERP off    0x0000000000000238 vaddr 0x0000000000400238 paddr 0x0000000000400238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000400000 paddr 0x0000000000400000 align 2**21
         filesz 0x00000000000007cc memsz 0x00000000000007cc flags r-x
    LOAD off    0x0000000000000e10 vaddr 0x0000000000600e10 paddr 0x0000000000600e10 align 2**21
         filesz 0x0000000000000234 memsz 0x0000000000000240 flags rw-
 DYNAMIC off    0x0000000000000e28 vaddr 0x0000000000600e28 paddr 0x0000000000600e28 align 2**3
         filesz 0x00000000000001d0 memsz 0x00000000000001d0 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000400254 paddr 0x0000000000400254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x0000000000000678 vaddr 0x0000000000400678 paddr 0x0000000000400678 align 2**2
         filesz 0x000000000000003c memsz 0x000000000000003c flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000e10 vaddr 0x0000000000600e10 paddr 0x0000000000600e10 align 2**0
         filesz 0x00000000000001f0 memsz 0x00000000000001f0 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x0000000000400400
  FINI                 0x0000000000400664
  INIT_ARRAY           0x0000000000600e10
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000600e18
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000400298
  STRTAB               0x0000000000400330
  SYMTAB               0x00000000004002b8
  STRSZ                0x0000000000000046
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000601000
  PLTRELSZ             0x0000000000000048
  PLTREL               0x0000000000000007
  JMPREL               0x00000000004003b8
  RELA                 0x00000000004003a0
  RELASZ               0x0000000000000018
  RELAENT              0x0000000000000018
  VERNEED              0x0000000000400380
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x0000000000400376

Version References:
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000400238  0000000000400238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000400254  0000000000400254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000400274  0000000000400274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000400298  0000000000400298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000078  00000000004002b8  00000000004002b8  000002b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000046  0000000000400330  0000000000400330  00000330  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  0000000a  0000000000400376  0000000000400376  00000376  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  0000000000400380  0000000000400380  00000380  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     00000018  00000000004003a0  00000000004003a0  000003a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     00000048  00000000004003b8  00000000004003b8  000003b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         0000001a  0000000000400400  0000000000400400  00000400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000040  0000000000400420  0000000000400420  00000420  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  0000000000400460  0000000000400460  00000460  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         000001f2  0000000000400470  0000000000400470  00000470  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000009  0000000000400664  0000000000400664  00000664  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       00000008  0000000000400670  0000000000400670  00000670  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 0000003c  0000000000400678  0000000000400678  00000678  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000114  00000000004006b8  00000000004006b8  000006b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000008  0000000000600e10  0000000000600e10  00000e10  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000008  0000000000600e18  0000000000600e18  00000e18  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .jcr          00000008  0000000000600e20  0000000000600e20  00000e20  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .dynamic      000001d0  0000000000600e28  0000000000600e28  00000e28  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got          00000008  0000000000600ff8  0000000000600ff8  00000ff8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got.plt      00000030  0000000000601000  0000000000601000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .data         00000014  0000000000601030  0000000000601030  00001030  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss          0000000c  0000000000601044  0000000000601044  00001044  2**2
                  ALLOC
 26 .comment      00000035  0000000000000000  0000000000000000  00001044  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
0000000000400238 l    d  .interp	0000000000000000              .interp
0000000000400254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000400274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000400298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000004002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000400330 l    d  .dynstr	0000000000000000              .dynstr
0000000000400376 l    d  .gnu.version	0000000000000000              .gnu.version
0000000000400380 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
00000000004003a0 l    d  .rela.dyn	0000000000000000              .rela.dyn
00000000004003b8 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000400400 l    d  .init	0000000000000000              .init
0000000000400420 l    d  .plt	0000000000000000              .plt
0000000000400460 l    d  .plt.got	0000000000000000              .plt.got
0000000000400470 l    d  .text	0000000000000000              .text
0000000000400664 l    d  .fini	0000000000000000              .fini
0000000000400670 l    d  .rodata	0000000000000000              .rodata
0000000000400678 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
00000000004006b8 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000600e10 l    d  .init_array	0000000000000000              .init_array
0000000000600e18 l    d  .fini_array	0000000000000000              .fini_array
0000000000600e20 l    d  .jcr	0000000000000000              .jcr
0000000000600e28 l    d  .dynamic	0000000000000000              .dynamic
0000000000600ff8 l    d  .got	0000000000000000              .got
0000000000601000 l    d  .got.plt	0000000000000000              .got.plt
0000000000601030 l    d  .data	0000000000000000              .data
0000000000601044 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000600e20 l     O .jcr	0000000000000000              __JCR_LIST__
00000000004004a0 l     F .text	0000000000000000              deregister_tm_clones
00000000004004e0 l     F .text	0000000000000000              register_tm_clones
0000000000400520 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000601044 l     O .bss	0000000000000001              completed.7594
0000000000600e18 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000400540 l     F .text	0000000000000000              frame_dummy
0000000000600e10 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              map.c
0000000000000000 l    df *ABS*	0000000000000000              recurse.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000004007c8 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000600e20 l     O .jcr	0000000000000000              __JCR_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000600e18 l       .init_array	0000000000000000              __init_array_end
0000000000600e28 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000600e10 l       .init_array	0000000000000000              __init_array_start
0000000000400678 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000601000 l     O .got.plt	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000400660 g     F .text	0000000000000002              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000601030  w      .data	0000000000000000              data_start
0000000000601044 g       .data	0000000000000000              _edata
0000000000400664 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              printf@@GLIBC_2.2.5
00000000004005a9 g     F .text	0000000000000041              recur
0000000000601040 g     O .data	0000000000000004              stuff
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000601030 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000601038 g     O .data	0000000000000000              .hidden __dso_handle
0000000000400670 g     O .rodata	0000000000000004              _IO_stdin_used
00000000004005f0 g     F .text	0000000000000065              __libc_csu_init
0000000000000000       F *UND*	0000000000000000              malloc@@GLIBC_2.2.5
0000000000601048 g     O .bss	0000000000000004              foo
0000000000601050 g       .bss	0000000000000000              _end
0000000000400470 g     F .text	000000000000002a              _start
0000000000601044 g       .bss	0000000000000000              __bss_start
0000000000400566 g     F .text	0000000000000043              main
0000000000000000  w      *UND*	0000000000000000              _Jv_RegisterClasses
0000000000601048 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000400400 g     F .init	0000000000000000              _init



Disassembly of section .init:

0000000000400400 <_init>:
  400400:	48 83 ec 08          	sub    $0x8,%rsp
  400404:	48 8b 05 ed 0b 20 00 	mov    0x200bed(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  40040b:	48 85 c0             	test   %rax,%rax
  40040e:	74 05                	je     400415 <_init+0x15>
  400410:	e8 4b 00 00 00       	callq  400460 <malloc@plt+0x10>
  400415:	48 83 c4 08          	add    $0x8,%rsp
  400419:	c3                   	retq   

Disassembly of section .plt:

0000000000400420 <printf@plt-0x10>:
  400420:	ff 35 e2 0b 20 00    	pushq  0x200be2(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400426:	ff 25 e4 0b 20 00    	jmpq   *0x200be4(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40042c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400430 <printf@plt>:
  400430:	ff 25 e2 0b 20 00    	jmpq   *0x200be2(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400436:	68 00 00 00 00       	pushq  $0x0
  40043b:	e9 e0 ff ff ff       	jmpq   400420 <_init+0x20>

0000000000400440 <__libc_start_main@plt>:
  400440:	ff 25 da 0b 20 00    	jmpq   *0x200bda(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400446:	68 01 00 00 00       	pushq  $0x1
  40044b:	e9 d0 ff ff ff       	jmpq   400420 <_init+0x20>

0000000000400450 <malloc@plt>:
  400450:	ff 25 d2 0b 20 00    	jmpq   *0x200bd2(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400456:	68 02 00 00 00       	pushq  $0x2
  40045b:	e9 c0 ff ff ff       	jmpq   400420 <_init+0x20>

Disassembly of section .plt.got:

0000000000400460 <.plt.got>:
  400460:	ff 25 92 0b 20 00    	jmpq   *0x200b92(%rip)        # 600ff8 <_DYNAMIC+0x1d0>
  400466:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000400470 <_start>:
  400470:	31 ed                	xor    %ebp,%ebp
  400472:	49 89 d1             	mov    %rdx,%r9
  400475:	5e                   	pop    %rsi
  400476:	48 89 e2             	mov    %rsp,%rdx
  400479:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40047d:	50                   	push   %rax
  40047e:	54                   	push   %rsp
  40047f:	49 c7 c0 60 06 40 00 	mov    $0x400660,%r8
  400486:	48 c7 c1 f0 05 40 00 	mov    $0x4005f0,%rcx
  40048d:	48 c7 c7 66 05 40 00 	mov    $0x400566,%rdi
  400494:	e8 a7 ff ff ff       	callq  400440 <__libc_start_main@plt>
  400499:	f4                   	hlt    
  40049a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004a0 <deregister_tm_clones>:
  4004a0:	b8 4f 10 60 00       	mov    $0x60104f,%eax
  4004a5:	55                   	push   %rbp
  4004a6:	48 2d 48 10 60 00    	sub    $0x601048,%rax
  4004ac:	48 83 f8 0e          	cmp    $0xe,%rax
  4004b0:	48 89 e5             	mov    %rsp,%rbp
  4004b3:	76 1b                	jbe    4004d0 <deregister_tm_clones+0x30>
  4004b5:	b8 00 00 00 00       	mov    $0x0,%eax
  4004ba:	48 85 c0             	test   %rax,%rax
  4004bd:	74 11                	je     4004d0 <deregister_tm_clones+0x30>
  4004bf:	5d                   	pop    %rbp
  4004c0:	bf 48 10 60 00       	mov    $0x601048,%edi
  4004c5:	ff e0                	jmpq   *%rax
  4004c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4004ce:	00 00 
  4004d0:	5d                   	pop    %rbp
  4004d1:	c3                   	retq   
  4004d2:	0f 1f 40 00          	nopl   0x0(%rax)
  4004d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4004dd:	00 00 00 

00000000004004e0 <register_tm_clones>:
  4004e0:	be 48 10 60 00       	mov    $0x601048,%esi
  4004e5:	55                   	push   %rbp
  4004e6:	48 81 ee 48 10 60 00 	sub    $0x601048,%rsi
  4004ed:	48 c1 fe 03          	sar    $0x3,%rsi
  4004f1:	48 89 e5             	mov    %rsp,%rbp
  4004f4:	48 89 f0             	mov    %rsi,%rax
  4004f7:	48 c1 e8 3f          	shr    $0x3f,%rax
  4004fb:	48 01 c6             	add    %rax,%rsi
  4004fe:	48 d1 fe             	sar    %rsi
  400501:	74 15                	je     400518 <register_tm_clones+0x38>
  400503:	b8 00 00 00 00       	mov    $0x0,%eax
  400508:	48 85 c0             	test   %rax,%rax
  40050b:	74 0b                	je     400518 <register_tm_clones+0x38>
  40050d:	5d                   	pop    %rbp
  40050e:	bf 48 10 60 00       	mov    $0x601048,%edi
  400513:	ff e0                	jmpq   *%rax
  400515:	0f 1f 00             	nopl   (%rax)
  400518:	5d                   	pop    %rbp
  400519:	c3                   	retq   
  40051a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400520 <__do_global_dtors_aux>:
  400520:	80 3d 1d 0b 20 00 00 	cmpb   $0x0,0x200b1d(%rip)        # 601044 <_edata>
  400527:	75 11                	jne    40053a <__do_global_dtors_aux+0x1a>
  400529:	55                   	push   %rbp
  40052a:	48 89 e5             	mov    %rsp,%rbp
  40052d:	e8 6e ff ff ff       	callq  4004a0 <deregister_tm_clones>
  400532:	5d                   	pop    %rbp
  400533:	c6 05 0a 0b 20 00 01 	movb   $0x1,0x200b0a(%rip)        # 601044 <_edata>
  40053a:	f3 c3                	repz retq 
  40053c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400540 <frame_dummy>:
  400540:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  400545:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400549:	75 05                	jne    400550 <frame_dummy+0x10>
  40054b:	eb 93                	jmp    4004e0 <register_tm_clones>
  40054d:	0f 1f 00             	nopl   (%rax)
  400550:	b8 00 00 00 00       	mov    $0x0,%eax
  400555:	48 85 c0             	test   %rax,%rax
  400558:	74 f1                	je     40054b <frame_dummy+0xb>
  40055a:	55                   	push   %rbp
  40055b:	48 89 e5             	mov    %rsp,%rbp
  40055e:	ff d0                	callq  *%rax
  400560:	5d                   	pop    %rbp
  400561:	e9 7a ff ff ff       	jmpq   4004e0 <register_tm_clones>

0000000000400566 <main>:
  400566:	55                   	push   %rbp
  400567:	48 89 e5             	mov    %rsp,%rbp
  40056a:	48 83 ec 30          	sub    $0x30,%rsp
  40056e:	89 7d dc             	mov    %edi,-0x24(%rbp)
  400571:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  400575:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  40057c:	bf 64 00 00 00       	mov    $0x64,%edi
  400581:	e8 ca fe ff ff       	callq  400450 <malloc@plt>
  400586:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40058a:	bf 64 00 00 00       	mov    $0x64,%edi
  40058f:	e8 bc fe ff ff       	callq  400450 <malloc@plt>
  400594:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400598:	bf 03 00 00 00       	mov    $0x3,%edi
  40059d:	e8 07 00 00 00       	callq  4005a9 <recur>
  4005a2:	b8 00 00 00 00       	mov    $0x0,%eax
  4005a7:	c9                   	leaveq 
  4005a8:	c3                   	retq   

00000000004005a9 <recur>:
  4005a9:	55                   	push   %rbp
  4005aa:	48 89 e5             	mov    %rsp,%rbp
  4005ad:	48 83 ec 20          	sub    $0x20,%rsp
  4005b1:	89 7d ec             	mov    %edi,-0x14(%rbp)
  4005b4:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4005b7:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4005ba:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4005bd:	89 c6                	mov    %eax,%esi
  4005bf:	bf 74 06 40 00       	mov    $0x400674,%edi
  4005c4:	b8 00 00 00 00       	mov    $0x0,%eax
  4005c9:	e8 62 fe ff ff       	callq  400430 <printf@plt>
  4005ce:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4005d2:	7e 0f                	jle    4005e3 <recur+0x3a>
  4005d4:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4005d7:	83 e8 01             	sub    $0x1,%eax
  4005da:	89 c7                	mov    %eax,%edi
  4005dc:	e8 c8 ff ff ff       	callq  4005a9 <recur>
  4005e1:	eb 05                	jmp    4005e8 <recur+0x3f>
  4005e3:	b8 00 00 00 00       	mov    $0x0,%eax
  4005e8:	c9                   	leaveq 
  4005e9:	c3                   	retq   
  4005ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004005f0 <__libc_csu_init>:
  4005f0:	41 57                	push   %r15
  4005f2:	41 56                	push   %r14
  4005f4:	41 89 ff             	mov    %edi,%r15d
  4005f7:	41 55                	push   %r13
  4005f9:	41 54                	push   %r12
  4005fb:	4c 8d 25 0e 08 20 00 	lea    0x20080e(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400602:	55                   	push   %rbp
  400603:	48 8d 2d 0e 08 20 00 	lea    0x20080e(%rip),%rbp        # 600e18 <__init_array_end>
  40060a:	53                   	push   %rbx
  40060b:	49 89 f6             	mov    %rsi,%r14
  40060e:	49 89 d5             	mov    %rdx,%r13
  400611:	4c 29 e5             	sub    %r12,%rbp
  400614:	48 83 ec 08          	sub    $0x8,%rsp
  400618:	48 c1 fd 03          	sar    $0x3,%rbp
  40061c:	e8 df fd ff ff       	callq  400400 <_init>
  400621:	48 85 ed             	test   %rbp,%rbp
  400624:	74 20                	je     400646 <__libc_csu_init+0x56>
  400626:	31 db                	xor    %ebx,%ebx
  400628:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40062f:	00 
  400630:	4c 89 ea             	mov    %r13,%rdx
  400633:	4c 89 f6             	mov    %r14,%rsi
  400636:	44 89 ff             	mov    %r15d,%edi
  400639:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40063d:	48 83 c3 01          	add    $0x1,%rbx
  400641:	48 39 eb             	cmp    %rbp,%rbx
  400644:	75 ea                	jne    400630 <__libc_csu_init+0x40>
  400646:	48 83 c4 08          	add    $0x8,%rsp
  40064a:	5b                   	pop    %rbx
  40064b:	5d                   	pop    %rbp
  40064c:	41 5c                	pop    %r12
  40064e:	41 5d                	pop    %r13
  400650:	41 5e                	pop    %r14
  400652:	41 5f                	pop    %r15
  400654:	c3                   	retq   
  400655:	90                   	nop
  400656:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40065d:	00 00 00 

0000000000400660 <__libc_csu_fini>:
  400660:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400664 <_fini>:
  400664:	48 83 ec 08          	sub    $0x8,%rsp
  400668:	48 83 c4 08          	add    $0x8,%rsp
  40066c:	c3                   	retq   
